{"version":3,"sources":["loadingGif.gif","assets/confirmed.gif","assets/declined.gif","components/Header.js","components/Navbar.js","components/DoggoProfile.js","components/Modal.js","components/Loading.js","components/Confirmed.js","components/Declined.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","clickEvent","className","onClick","Navbar","DoggoProfile","imgSrc","openModal","src","alt","value","event","Modal","chosenPupper","showLoading","closeEvent","Loading","img","Confirmed","class","refreshPage","window","location","reload","Declined","type","App","scrollToDoggoSelection","doggoSelection","document","querySelector","addEventListener","scrollIntoView","behavior","block","chosenDoggo","target","setState","modal","isDoggoSelection","isChosenOne","closeModal","isHeader","isNavbar","randomBool","bool","Math","round","random","confirmation","isLoading","randomInterval","setTimeout","state","doggo","axios","method","url","responseType","then","res","myData","data","map","item","doggoURL","doggoID","id","alert","this","dog","key","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e5fd1e64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loadingGif.55c8a2b4.gif\";","module.exports = __webpack_public_path__ + \"static/media/confirmed.264eae12.gif\";","module.exports = __webpack_public_path__ + \"static/media/declined.2a9c6d84.gif\";","import React from 'react';\n\nconst Header = ({clickEvent}) => {\t\n\treturn (\n\t\t<header>\t\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"headerContainer\">\n\t\t\t\t\t<h1>Pupper Play Date</h1>\n\t\t\t\t\t\n\t\t\t\t\t<button \n\t\t\t\t\t\tonClick={clickEvent} \n\t\t\t\t\t\tclassName=\"viewButton\">\n\t\t\t\t\t\t\tView Puppers\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t)\n}\n\n\nexport default Header;","import React from 'react';\n\nconst Navbar = () => {\n\treturn(\n\t\t<div className=\"navbar\">\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<h1>Pupper Play Date</h1>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Navbar;","import React from 'react';\n\nconst DoggoProfile = ({ imgSrc, openModal }) => {\n\t\n\treturn(\n\n\t\t<div className='doggoProfile'>\n\t\t\t\n\t\t\t<div className='imageContainer'>\n\t\t\t\t<img src={imgSrc} alt=\"What a handsome pupper\"/>\n\t\t\t</div>\n\t\t\t<div className='online'>\n\t\t\t\t<p>\n\t\t\t\t\t<i className='fas fa-bone'></i>\n\t\t\t\t\tOnline Now!\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<button value={imgSrc} onClick={(event) => {openModal(event)}}>\n\t\t\t\t<i className='fas fa-paw'></i>\n\t\t\t\tSelect me!\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default DoggoProfile;","import React from 'react';\n\nconst Modal = ({chosenPupper, showLoading, closeEvent}) => {\n\treturn (\n\t\t<div className='modalContainer'>\n\t\t\t<div className='confirmationModal wrapper'>\n\t\t\t\t<div className='modalImage'>\n\t\t\t\t\t<img src={chosenPupper} alt=\"Such a handsome pupper\"/>\n\t\t\t\t</div>\n\t\t\t\t<h3>Would you like to confirm your playdate?</h3>\n\t\t\t\t<div className='btn'>\n\t\t\t\t\t<button onClick={showLoading} className='yes'>Yes</button>\n\t\t\t\t\t<button onClick={closeEvent} className='no'>No</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Modal;","import React from 'react';\nimport img from '../loadingGif.gif';\n\nconst Loading = () => {\n\treturn (\n\t\t<div className='loading'>\n\t\t\t<div className='loadingContainer'>\n\t\t\t\t<img src={img} alt='GIF of cartoon dog dancing'/>\n\t\t\t</div>\n\t\t\t<h2>\n\t\t\t\tPlease wait while we confirm your playdate!\n\t\t\t</h2>\n\t\t</div>\n\t)\n}\n\n\nexport default Loading;","import React from 'react';\nimport img from '../assets/confirmed.gif'\n\nconst Confirmed = () => {\n\treturn (\n\t\t<div  className='wrapper'>\n\t\t\t<div className='confirmed'>\n\t\t\t\t<i class=\"fas fa-check-circle\"></i>\n\t\t\t\t<h3>Yay! Your playdate has been confirmed!</h3>\n\t\t\t</div>\n\t\t\t<div className='imgCD'>\n\t\t\t\t<img src={img} alt='Happy pupper ready to play!'/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Confirmed;","import React from 'react';\nimport img from '../assets/declined.gif';\n\nconst refreshPage = () => {\n\twindow.location.reload();\n}\n\nconst Declined = () => {\n\treturn (\n\t\t<div className='wrapper'>\n\t\t\t<div className='declined'>\n\t\t\t\t<i class=\"fas fa-times-circle\"></i>\n\t\t\t\t<h3>Oh no! Your playdate has been declined!</h3>\n\t\t\t\n\t\t\t\t<div className='imgCD'>\n\t\t\t\t\t<img src={img} alt='Sleepy pupper animated gif'/>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<button type='submit' onClick={refreshPage}>Try again!</button>\n\t\t\t</div>\n\t\t\n\t\t\n\t\t</div>\n\t)\n}\n\nexport default Declined;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header.js';\nimport Navbar from './components/Navbar.js';\nimport DoggoProfile from './components/DoggoProfile.js';\nimport Modal from './components/Modal.js';\nimport Loading from './components/Loading.js';\nimport Confirmed from './components/Confirmed.js';\nimport Declined from './components/Declined.js';\nimport './App.css';\n\nclass  App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.state = {\n\t\t\tdoggo: [],\n\t\t\tisHeader: true,\n\t\t\tisNavbar: false,\n\t\t\tisDoggoSelection: true,\n\t\t\tisChosenOne: '',\n\t\t\tmodal: false,\n\t\t\tisLoading: '',\n\t\t\tconfirmation: '',\n\t\t};\t\n\t}\n\n\tasync componentDidMount() {\n\t\t// Make Axios request\n\t\ttry {\n\t\t\tawait axios({\n\t\t\t\tmethod: 'GET',\n\t\t\t\turl: 'https://api.thedogapi.com/v1/images/search?apiKey=16ec4811-e569-402f-b549-dea6709fcca2&limit=20',\n\t\t\t\tresponseType: 'JSON',\n\t\t\t}).then(res => {\n\t\t\t\t// Store the result data so its easier to work with\n\t\t\t\tconst result = res.data;\n\t\t\t\t\n\t\t\t\t// map over res.data and return an array due to nesting issues in res.data\n\t\t\t\tconst myData = result.map(item => {\n\t\t\t\t\treturn ({\n\t\t\t\t\t\tdoggoURL: item.url,\n\t\t\t\t\t\tdoggoID: item.id\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// push that returned array into this.state\n\t\t\t\tthis.setState({\n\t\t\t\t\tdoggo: myData,\n\t\t\t\t});\n\t\t\t}); // End axios request\n\t\t} catch {\n\t\t\talert(\"Oh no! Something doesn't seem right!\")\n\t\t}\n\t}\n\n\tscrollToDoggoSelection = () => {\n\t\tconst doggoSelection = document.querySelector('.doggoSelection');\n\n\t\tdocument.querySelector('.viewButton').addEventListener('click', () => {\n\t\t\tdoggoSelection.scrollIntoView({\n\t\t\t\tbehavior: 'smooth',\n\t\t\t\tblock: 'start'\n\t\t\t});\n\t\t});\n\t}\n\n\topenModal = (event) => {\n\t\tconst chosenDoggo = event.target.value;\n\t\n\t\tthis.setState({\n\t\t\tmodal: true,\n\t\t\tisDoggoSelection: false,\n\t\t\tisChosenOne: chosenDoggo,\n\t\t});\n\t}\n\n\tcloseModal = () => {\n\t\tthis.setState({\n\t\t\tisHeader: false,\n\t\t\tisNavbar: true,\n\t\t\tisDoggoSelection: true,\n\t\t\tmodal: false,\n\t\t});\n\t}\n\n\trandomBool = () => {\n\t\tlet bool = Math.round(Math.random() * 9);\n\n\t\tif (bool % 2) {\n\t\t\tbool = true;\n\t\t} else {\n\t\t\tbool = false;\n\t\t};\n\n\t\tthis.setState({\n\t\t\tconfirmation: bool,\n\t\t\tisLoading: false,\n\t\t});\n\t}\n\n\tshowLoading = () => {\n\t\t// A timeout to create the illusion that someone on the other side is responding to your request\n\t\tconst randomInterval = Math.round((Math.random() * 5) * 1000);\n\t\t\n\t\tsetTimeout(this.randomBool, randomInterval);\n\n\t\tthis.setState({\n\t\t\tisHeader: false,\n\t\t\tisNavbar: true,\n\t\t\tisDoggoSelection: false,\n\t\t\tmodal: false,\n\t\t\tisLoading: true,\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t{/* Import Header comp */}\n\t\t\t\t{ this.state.isHeader ?\n\t\t\t\t\t\t<Header className='wrapper' clickEvent={this.scrollToDoggoSelection} />\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\n\t\t\t\t{/* Navbar for display after first Doggo Selection view */}\n\t\t\t\t{this.state.isNavbar ? <Navbar /> : null}\n\n\t\t\t\t{/* Map and return doggo profiles */}\n\t\t\t\t{this.state.isDoggoSelection ? \n\t\t\t\t\t<div className='doggoSelection wrapper'>\n\t\t\t\t\t\t{this.state.doggo.map((dog) => {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<DoggoProfile \n\t\t\t\t\t\t\t\t\tkey={dog.doggoID} \n\t\t\t\t\t\t\t\t\tid={dog.doggoID} \n\t\t\t\t\t\t\t\t\timgSrc={dog.doggoURL}\n\t\t\t\t\t\t\t\t\topenModal={this.openModal}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)})}\n\t\t\t\t\t</div> \n\t\t\t\t\t: null\n\t\t\t\t}\n\n\t\t\t\t{/* Display pop up modal with selected doggo to confirm selection */}\n\t\t\t\t{this.state.modal ? \n\t\t\t\t\t<Modal chosenPupper={this.state.isChosenOne} showLoading={this.showLoading} closeEvent={this.closeModal} />\n\t\t\t\t\t: null\n\t\t\t\t}\n\n\t\t\t\t{/* Show Loading screen after doggo is selected */}\n\t\t\t\t{this.state.isLoading ? <Loading className='wrapper' /> : null}\n\n\t\t\t\t{/* Display either appointment confirm or declined */}\n\t\t\t\t{this.state.confirmation === true ? <Confirmed /> :\n\t\t\t\tthis.state.confirmation === false ? <Declined /> :\n\t\t\t\tnull}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}